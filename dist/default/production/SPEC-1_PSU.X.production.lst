

Microchip MPLAB XC8 Assembler V3.00 build 20241204225717 
                                                                                               Sun Mar  2 16:06:46 2025

Microchip MPLAB XC8 C Compiler v3.00 (Free license) build 20241204225717 Og1 
     1                           	processor	12F675
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,space=0,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,space=0,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,space=0,split=1,delta=2
     9                           	psect	text1,local,class=CODE,space=0,merge=1,inline,delta=2
    10                           	psect	text2,local,class=CODE,space=0,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,space=0,merge=1,inline,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x5E,2
    14     0000                     
    15                           ; Generated 17/08/2023 GMT
    16                           ; 
    17                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC12F675 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49     0004                     fsr             equ	4
    50     0004                     fsr0            equ	4
    51     0000                     indf            equ	0
    52     0000                     indf0           equ	0
    53     0002                     pc              equ	2
    54     0002                     pcl             equ	2
    55     000A                     pclath          equ	10
    56     0003                     status          equ	3
    57     0000                     INDF            equ	0	;# 
    58     0001                     TMR0            equ	1	;# 
    59     0002                     PCL             equ	2	;# 
    60     0003                     STATUS          equ	3	;# 
    61     0004                     FSR             equ	4	;# 
    62     0005                     GPIO            equ	5	;# 
    63     000A                     PCLATH          equ	10	;# 
    64     000B                     INTCON          equ	11	;# 
    65     000C                     PIR1            equ	12	;# 
    66     000E                     TMR1            equ	14	;# 
    67     000E                     TMR1L           equ	14	;# 
    68     000F                     TMR1H           equ	15	;# 
    69     0010                     T1CON           equ	16	;# 
    70     0019                     CMCON           equ	25	;# 
    71     001E                     ADRESH          equ	30	;# 
    72     001F                     ADCON0          equ	31	;# 
    73     0081                     OPTION_REG      equ	129	;# 
    74     0085                     TRISIO          equ	133	;# 
    75     008C                     PIE1            equ	140	;# 
    76     008E                     PCON            equ	142	;# 
    77     0090                     OSCCAL          equ	144	;# 
    78     0095                     WPU             equ	149	;# 
    79     0096                     IOC             equ	150	;# 
    80     0096                     IOCB            equ	150	;# 
    81     0099                     VRCON           equ	153	;# 
    82     009A                     EEDATA          equ	154	;# 
    83     009A                     EEDAT           equ	154	;# 
    84     009B                     EEADR           equ	155	;# 
    85     009C                     EECON1          equ	156	;# 
    86     009D                     EECON2          equ	157	;# 
    87     009E                     ADRESL          equ	158	;# 
    88     009F                     ANSEL           equ	159	;# 
    89     0000                     INDF            equ	0	;# 
    90     0001                     TMR0            equ	1	;# 
    91     0002                     PCL             equ	2	;# 
    92     0003                     STATUS          equ	3	;# 
    93     0004                     FSR             equ	4	;# 
    94     0005                     GPIO            equ	5	;# 
    95     000A                     PCLATH          equ	10	;# 
    96     000B                     INTCON          equ	11	;# 
    97     000C                     PIR1            equ	12	;# 
    98     000E                     TMR1            equ	14	;# 
    99     000E                     TMR1L           equ	14	;# 
   100     000F                     TMR1H           equ	15	;# 
   101     0010                     T1CON           equ	16	;# 
   102     0019                     CMCON           equ	25	;# 
   103     001E                     ADRESH          equ	30	;# 
   104     001F                     ADCON0          equ	31	;# 
   105     0081                     OPTION_REG      equ	129	;# 
   106     0085                     TRISIO          equ	133	;# 
   107     008C                     PIE1            equ	140	;# 
   108     008E                     PCON            equ	142	;# 
   109     0090                     OSCCAL          equ	144	;# 
   110     0095                     WPU             equ	149	;# 
   111     0096                     IOC             equ	150	;# 
   112     0096                     IOCB            equ	150	;# 
   113     0099                     VRCON           equ	153	;# 
   114     009A                     EEDATA          equ	154	;# 
   115     009A                     EEDAT           equ	154	;# 
   116     009B                     EEADR           equ	155	;# 
   117     009C                     EECON1          equ	156	;# 
   118     009D                     EECON2          equ	157	;# 
   119     009E                     ADRESL          equ	158	;# 
   120     009F                     ANSEL           equ	159	;# 
   121                           
   122                           	psect	strings
   123     0001                     __pstrings:
   124     0001                     stringtab:
   125     0001                     __stringtab:
   126     0001                     stringcode:	
   127                           ;	String table - string pointers are 1 byte each
   128                           
   129     0001                     stringdir:
   130     0001  3000               	movlw	high stringdir
   131     0002  008A               	movwf	10
   132     0003  0804               	movf	4,w
   133     0004  0A84               	incf	4,f
   134     0005  0782               	addwf	2,f
   135     0006                     __stringbase:
   136     0006  3400               	retlw	0
   137     0007                     __end_of__stringtab:
   138     0007                     _log_table:
   139     0007  3400               	retlw	0
   140     0008  3401               	retlw	1
   141     0009  3402               	retlw	2
   142     000A  3403               	retlw	3
   143     000B  3404               	retlw	4
   144     000C  3405               	retlw	5
   145     000D  3406               	retlw	6
   146     000E  3407               	retlw	7
   147     000F  3409               	retlw	9
   148     0010  340A               	retlw	10
   149     0011  340B               	retlw	11
   150     0012  340C               	retlw	12
   151     0013  340D               	retlw	13
   152     0014  340F               	retlw	15
   153     0015  3410               	retlw	16
   154     0016  3411               	retlw	17
   155     0017  3412               	retlw	18
   156     0018  3414               	retlw	20
   157     0019  3415               	retlw	21
   158     001A  3416               	retlw	22
   159     001B  3418               	retlw	24
   160     001C  3419               	retlw	25
   161     001D  341B               	retlw	27
   162     001E  341C               	retlw	28
   163     001F  341E               	retlw	30
   164     0020  341F               	retlw	31
   165     0021  3421               	retlw	33
   166     0022  3422               	retlw	34
   167     0023  3424               	retlw	36
   168     0024  3425               	retlw	37
   169     0025  3427               	retlw	39
   170     0026  3429               	retlw	41
   171     0027  342A               	retlw	42
   172     0028  342C               	retlw	44
   173     0029  342E               	retlw	46
   174     002A  3430               	retlw	48
   175     002B  3431               	retlw	49
   176     002C  3433               	retlw	51
   177     002D  3435               	retlw	53
   178     002E  3437               	retlw	55
   179     002F  3439               	retlw	57
   180     0030  343B               	retlw	59
   181     0031  343D               	retlw	61
   182     0032  343F               	retlw	63
   183     0033  3441               	retlw	65
   184     0034  3443               	retlw	67
   185     0035  3445               	retlw	69
   186     0036  3448               	retlw	72
   187     0037  344A               	retlw	74
   188     0038  344C               	retlw	76
   189     0039  344E               	retlw	78
   190     003A  3451               	retlw	81
   191     003B  3453               	retlw	83
   192     003C  3455               	retlw	85
   193     003D  3458               	retlw	88
   194     003E  345A               	retlw	90
   195     003F  345D               	retlw	93
   196     0040  3460               	retlw	96
   197     0041  3462               	retlw	98
   198     0042  3465               	retlw	101
   199     0043  3468               	retlw	104
   200     0044  346A               	retlw	106
   201     0045  346D               	retlw	109
   202     0046  3470               	retlw	112
   203     0047  3473               	retlw	115
   204     0048  3476               	retlw	118
   205     0049  3479               	retlw	121
   206     004A  347C               	retlw	124
   207     004B  347F               	retlw	127
   208     004C  3482               	retlw	130
   209     004D  3485               	retlw	133
   210     004E  3489               	retlw	137
   211     004F  348C               	retlw	140
   212     0050  348F               	retlw	143
   213     0051  3493               	retlw	147
   214     0052  3496               	retlw	150
   215     0053  349A               	retlw	154
   216     0054  349E               	retlw	158
   217     0055  34A1               	retlw	161
   218     0056  34A5               	retlw	165
   219     0057  34A9               	retlw	169
   220     0058  34AD               	retlw	173
   221     0059  34B1               	retlw	177
   222     005A  34B5               	retlw	181
   223     005B  34B9               	retlw	185
   224     005C  34BD               	retlw	189
   225     005D  34C1               	retlw	193
   226     005E  34C5               	retlw	197
   227     005F  34CA               	retlw	202
   228     0060  34CE               	retlw	206
   229     0061  34D3               	retlw	211
   230     0062  34D7               	retlw	215
   231     0063  34DC               	retlw	220
   232     0064  34E1               	retlw	225
   233     0065  34E6               	retlw	230
   234     0066  34EB               	retlw	235
   235     0067  34F0               	retlw	240
   236     0068  34F5               	retlw	245
   237     0069  34FA               	retlw	250
   238     006A  34FF               	retlw	255
   239     006B                     __end_of_log_table:
   240     0019                     _CMCON          set	25
   241     001F                     _ADCON0bits     set	31
   242     0005                     _GPIObits       set	5
   243     0001                     _TMR0           set	1
   244     0085                     _TRISIObits     set	133
   245     0099                     _VRCON          set	153
   246     009F                     _ANSELbits      set	159
   247     0081                     _OPTION_REGbits set	129
   248     042A                     _TRISIO2        set	1066
   249                           
   250                           	psect	cinit
   251     03FD                     start_initialization:	
   252                           ; #config settings
   253                           
   254     03FD                     __initialization:
   255     03FD                     end_of_initialization:	
   256                           ;End of C runtime variable initialization code
   257                           
   258     03FD                     __end_of__initialization:
   259     03FD  0183               	clrf	3
   260     03FE  2B52               	ljmp	_main	;jump to C main() function
   261                           
   262                           	psect	cstackCOMMON
   263     0000                     __pcstackCOMMON:
   264     0000                     ??_Timer0_Init:
   265     0000                     ??_Read_Timer0:	
   266                           ; 1 bytes @ 0x0
   267                           
   268                           
   269                           	psect	cstackBANK0
   270     0020                     __pcstackBANK0:	
   271                           ; 1 bytes @ 0x0
   272                           
   273     0020                     ?_Timer0_Init:
   274     0020                     ?_Read_Timer0:	
   275                           ; 1 bytes @ 0x0
   276                           
   277     0020                     ?_bitbang_pwm_cycle:	
   278                           ; 1 bytes @ 0x0
   279                           
   280     0020                     ?_main:	
   281                           ; 1 bytes @ 0x0
   282                           
   283     0020                     ??_bitbang_pwm_cycle:	
   284                           ; 1 bytes @ 0x0
   285                           
   286                           
   287                           ; 1 bytes @ 0x0
   288     0020                     	ds	2
   289     0022                     bitbang_pwm_cycle@bri:
   290                           
   291                           ; 1 bytes @ 0x2
   292     0022                     	ds	1
   293     0023                     bitbang_pwm_cycle@period:
   294                           
   295                           ; 2 bytes @ 0x3
   296     0023                     	ds	2
   297     0025                     bitbang_pwm_cycle@on:
   298                           
   299                           ; 2 bytes @ 0x5
   300     0025                     	ds	2
   301     0027                     ??_main:
   302                           
   303                           ; 1 bytes @ 0x7
   304     0027                     	ds	1
   305     0028                     main@last_timer_val:
   306                           
   307                           ; 1 bytes @ 0x8
   308     0028                     	ds	1
   309     0029                     main@muting_counter:
   310                           
   311                           ; 2 bytes @ 0x9
   312     0029                     	ds	2
   313     002B                     main@y:
   314                           
   315                           ; 2 bytes @ 0xB
   316     002B                     	ds	2
   317     002D                     main@timer_val:
   318                           
   319                           ; 1 bytes @ 0xD
   320     002D                     	ds	1
   321     002E                     main@ac_sense_timeout:
   322                           
   323                           ; 2 bytes @ 0xE
   324     002E                     	ds	2
   325     0030                     main@x:
   326                           
   327                           ; 1 bytes @ 0x10
   328     0030                     	ds	1
   329     0031                     main@x_222:
   330                           
   331                           ; 1 bytes @ 0x11
   332     0031                     	ds	1
   333     0032                     main@set_brightness:
   334                           
   335                           ; 1 bytes @ 0x12
   336     0032                     	ds	1
   337     0033                     main@led_brightness:
   338                           
   339                           ; 1 bytes @ 0x13
   340     0033                     	ds	1
   341                           
   342                           	psect	maintext
   343     0352                     __pmaintext:	
   344 ;;
   345 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   346 ;;
   347 ;; *************** function _main *****************
   348 ;; Defined at:
   349 ;;		line 129 in file "main.c"
   350 ;; Parameters:    Size  Location     Type
   351 ;;		None
   352 ;; Auto vars:     Size  Location     Type
   353 ;;  x               1   17[BANK0 ] unsigned char 
   354 ;;  x               1   16[BANK0 ] unsigned char 
   355 ;;  y               2   11[BANK0 ] int 
   356 ;;  timer_val       1   13[BANK0 ] unsigned char 
   357 ;;  ac_sense_tim    2   14[BANK0 ] short 
   358 ;;  muting_count    2    9[BANK0 ] short 
   359 ;;  led_brightne    1   19[BANK0 ] unsigned char 
   360 ;;  set_brightne    1   18[BANK0 ] unsigned char 
   361 ;;  last_timer_v    1    8[BANK0 ] unsigned char 
   362 ;;  last_state      1    0        unsigned char 
   363 ;;  _led_state      1    0        unsigned char 
   364 ;; Return value:  Size  Location     Type
   365 ;;                  1    wreg      void 
   366 ;; Registers used:
   367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   368 ;; Tracked objects:
   369 ;;		On entry : B00/0
   370 ;;		On exit  : 0/0
   371 ;;		Unchanged: 0/0
   372 ;; Data sizes:     COMMON   BANK0
   373 ;;      Params:         0       0
   374 ;;      Locals:         0      12
   375 ;;      Temps:          0       1
   376 ;;      Totals:         0      13
   377 ;;Total ram usage:       13 bytes
   378 ;; Hardware stack levels required when called: 2
   379 ;; This function calls:
   380 ;;		_Read_Timer0
   381 ;;		_Timer0_Init
   382 ;;		_bitbang_pwm_cycle
   383 ;; This function is called by:
   384 ;;		Startup code after reset
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388     0352                     _main:	
   389                           ;psect for function _main
   390                           
   391     0352                     l748:	
   392                           ;incstack = 0
   393                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   394                           
   395     0352                     l750:
   396                           
   397                           ;main.c: 134:     ADCON0bits.ADON = 0;
   398     0352  1283               	bcf	3,5	;RP0=0, select bank0
   399     0353  101F               	bcf	31,0	;volatile
   400     0354                     l752:
   401                           
   402                           ;main.c: 135:     ANSELbits.ANS = 0;
   403     0354  30F0               	movlw	-16
   404     0355  1683               	bsf	3,5	;RP0=1, select bank1
   405     0356  059F               	andwf	31,f	;volatile
   406     0357                     l754:
   407                           
   408                           ;main.c: 136:     VRCON = 0;
   409     0357  0199               	clrf	25	;volatile
   410     0358                     l756:
   411                           
   412                           ;main.c: 137:     CMCON = 0x7;
   413     0358  3007               	movlw	7
   414     0359  1283               	bcf	3,5	;RP0=0, select bank0
   415     035A  0099               	movwf	25	;volatile
   416     035B                     l758:
   417                           
   418                           ;main.c: 140:     TRISIObits.TRISIO0 = 0;
   419     035B  1683               	bsf	3,5	;RP0=1, select bank1
   420     035C  1005               	bcf	5,0	;volatile
   421     035D                     l760:
   422                           
   423                           ;main.c: 141:     TRISIObits.TRISIO1 = 1;
   424     035D  1485               	bsf	5,1	;volatile
   425     035E                     l762:
   426                           
   427                           ;main.c: 142:     TRISIObits.TRISIO2 = 1;
   428     035E  1505               	bsf	5,2	;volatile
   429     035F                     l764:
   430                           
   431                           ;main.c: 145:     Timer0_Init();
   432     035F  231F               	fcall	_Timer0_Init
   433     0360                     l766:
   434     0360  1283               	bcf	3,5	;RP0=0, select bank0
   435     0361  0805               	movf	5,w	;volatile
   436     0362                     l768:
   437                           
   438                           ;main.c: 153:     uint8_t set_brightness = 99;
   439     0362  3063               	movlw	99
   440     0363  00B2               	movwf	main@set_brightness
   441     0364                     l770:
   442                           
   443                           ;main.c: 157:     uint8_t led_brightness = 0;
   444     0364  01B3               	clrf	main@led_brightness
   445     0365                     l772:
   446                           
   447                           ;main.c: 160:     uint8_t last_timer_val = 0;
   448     0365  01A8               	clrf	main@last_timer_val
   449     0366                     l774:
   450                           
   451                           ;main.c: 166:     int16_t ac_sense_timeout = 0;
   452     0366  01AE               	clrf	main@ac_sense_timeout
   453     0367  01AF               	clrf	main@ac_sense_timeout+1
   454     0368                     l776:
   455                           
   456                           ;main.c: 174:     int16_t muting_counter = 500;
   457     0368  30F4               	movlw	244
   458     0369  00A9               	movwf	main@muting_counter
   459     036A  3001               	movlw	1
   460     036B  00AA               	movwf	main@muting_counter+1
   461     036C                     l778:
   462                           
   463                           ;main.c: 177:     {;main.c: 186:         uint8_t timer_val = Read_Timer0();
   464     036C  231C               	fcall	_Read_Timer0
   465     036D  1283               	bcf	3,5	;RP0=0, select bank0
   466     036E  00AD               	movwf	main@timer_val
   467     036F                     l780:
   468                           
   469                           ;main.c: 187:         if(timer_val != last_timer_val)
   470     036F  082D               	movf	main@timer_val,w
   471     0370  0628               	xorwf	main@last_timer_val,w
   472     0371  1903               	skipnz
   473     0372  2B74               	goto	u171
   474     0373  2B75               	goto	u170
   475     0374                     u171:
   476     0374  2B7D               	goto	l786
   477     0375                     u170:
   478     0375                     l782:
   479                           
   480                           ;main.c: 188:         {;main.c: 189:             last_timer_val = timer_val;
   481     0375  082D               	movf	main@timer_val,w
   482     0376  00A8               	movwf	main@last_timer_val
   483     0377                     l784:
   484                           
   485                           ;main.c: 192:             set_brightness = 99;
   486     0377  3063               	movlw	99
   487     0378  00B2               	movwf	main@set_brightness
   488                           
   489                           ;main.c: 196:             ac_sense_timeout = 10;
   490     0379  300A               	movlw	10
   491     037A  00AE               	movwf	main@ac_sense_timeout
   492     037B  3000               	movlw	0
   493     037C  00AF               	movwf	main@ac_sense_timeout+1
   494     037D                     l786:
   495                           
   496                           ;main.c: 200:         bitbang_pwm_cycle(led_brightness);
   497     037D  0833               	movf	main@led_brightness,w
   498     037E  2325               	fcall	_bitbang_pwm_cycle
   499     037F                     l788:
   500                           
   501                           ;main.c: 206:         if(led_brightness != set_brightness) {
   502     037F  1283               	bcf	3,5	;RP0=0, select bank0
   503     0380  0833               	movf	main@led_brightness,w
   504     0381  0632               	xorwf	main@set_brightness,w
   505     0382  1903               	skipnz
   506     0383  2B85               	goto	u181
   507     0384  2B86               	goto	u180
   508     0385                     u181:
   509     0385  2B97               	goto	l41
   510     0386                     u180:
   511     0386                     l790:
   512                           
   513                           ;main.c: 208:             if(led_brightness < set_brightness)
   514     0386  0832               	movf	main@set_brightness,w
   515     0387  0233               	subwf	main@led_brightness,w
   516     0388  1803               	skipnc
   517     0389  2B8B               	goto	u191
   518     038A  2B8C               	goto	u190
   519     038B                     u191:
   520     038B  2B8F               	goto	l794
   521     038C                     u190:
   522     038C                     l792:
   523                           
   524                           ;main.c: 209:                 led_brightness++;
   525     038C  3001               	movlw	1
   526     038D  07B3               	addwf	main@led_brightness,f
   527     038E  2B97               	goto	l41
   528     038F                     l794:
   529     038F  0833               	movf	main@led_brightness,w
   530     0390  0232               	subwf	main@set_brightness,w
   531     0391  1803               	skipnc
   532     0392  2B94               	goto	u201
   533     0393  2B95               	goto	u200
   534     0394                     u201:
   535     0394  2B97               	goto	l41
   536     0395                     u200:
   537     0395                     l796:
   538                           
   539                           ;main.c: 211:                 led_brightness--;
   540     0395  3001               	movlw	1
   541     0396  02B3               	subwf	main@led_brightness,f
   542     0397                     l41:	
   543                           ;main.c: 212:         }
   544                           
   545                           
   546                           ;main.c: 221:         if(ac_sense_timeout) {
   547     0397  082E               	movf	main@ac_sense_timeout,w
   548     0398  042F               	iorwf	main@ac_sense_timeout+1,w
   549     0399  1903               	btfsc	3,2
   550     039A  2B9C               	goto	u211
   551     039B  2B9D               	goto	u210
   552     039C                     u211:
   553     039C  2BAE               	goto	l806
   554     039D                     u210:
   555     039D                     l798:
   556                           
   557                           ;main.c: 222:             ac_sense_timeout--;
   558     039D  30FF               	movlw	255
   559     039E  07AE               	addwf	main@ac_sense_timeout,f
   560     039F  1803               	skipnc
   561     03A0  0AAF               	incf	main@ac_sense_timeout+1,f
   562     03A1  30FF               	movlw	255
   563     03A2  07AF               	addwf	main@ac_sense_timeout+1,f
   564     03A3                     l800:
   565                           
   566                           ;main.c: 223:             if(ac_sense_timeout == 0) {
   567     03A3  082E               	movf	main@ac_sense_timeout,w
   568     03A4  042F               	iorwf	main@ac_sense_timeout+1,w
   569     03A5  1D03               	btfss	3,2
   570     03A6  2BA8               	goto	u221
   571     03A7  2BA9               	goto	u220
   572     03A8                     u221:
   573     03A8  2BAE               	goto	l806
   574     03A9                     u220:
   575     03A9                     l802:
   576                           
   577                           ;main.c: 224:                 set_brightness = 0;
   578     03A9  01B2               	clrf	main@set_brightness
   579     03AA                     l804:
   580                           
   581                           ;main.c: 225:                 muting_counter = 500;
   582     03AA  30F4               	movlw	244
   583     03AB  00A9               	movwf	main@muting_counter
   584     03AC  3001               	movlw	1
   585     03AD  00AA               	movwf	main@muting_counter+1
   586     03AE                     l806:
   587                           
   588                           ;main.c: 231:         if(GPIObits.GPIO1 && set_brightness) {
   589     03AE  1C85               	btfss	5,1	;volatile
   590     03AF  2BB1               	goto	u231
   591     03B0  2BB2               	goto	u230
   592     03B1                     u231:
   593     03B1  2B6C               	goto	l778
   594     03B2                     u230:
   595     03B2                     l808:
   596     03B2  0832               	movf	main@set_brightness,w
   597     03B3  1903               	btfsc	3,2
   598     03B4  2BB6               	goto	u241
   599     03B5  2BB7               	goto	u240
   600     03B6                     u241:
   601     03B6  2B6C               	goto	l778
   602     03B7                     u240:
   603     03B7                     l810:
   604                           
   605                           ;main.c: 233:             if(muting_counter == 0) {
   606     03B7  0829               	movf	main@muting_counter,w
   607     03B8  042A               	iorwf	main@muting_counter+1,w
   608     03B9  1D03               	btfss	3,2
   609     03BA  2BBC               	goto	u251
   610     03BB  2BBD               	goto	u250
   611     03BC                     u251:
   612     03BC  2BF5               	goto	l848
   613     03BD                     u250:
   614     03BD                     l812:
   615                           
   616                           ;main.c: 235:                 for(int y = 0; y < 2; y++) {
   617     03BD  01AB               	clrf	main@y
   618     03BE  01AC               	clrf	main@y+1
   619     03BF                     l818:
   620                           
   621                           ;main.c: 238:                     for(uint8_t x = 0; x < 30; x++) {
   622     03BF  1283               	bcf	3,5	;RP0=0, select bank0
   623     03C0  01B0               	clrf	main@x
   624     03C1                     l824:
   625                           
   626                           ;main.c: 241:                         bitbang_pwm_cycle(10 + x);
   627     03C1  0830               	movf	main@x,w
   628     03C2  3E0A               	addlw	10
   629     03C3  2325               	fcall	_bitbang_pwm_cycle
   630     03C4                     l826:
   631                           
   632                           ;main.c: 242:                     }
   633     03C4  3001               	movlw	1
   634     03C5  1283               	bcf	3,5	;RP0=0, select bank0
   635     03C6  07B0               	addwf	main@x,f
   636     03C7                     l828:
   637     03C7  301E               	movlw	30
   638     03C8  0230               	subwf	main@x,w
   639     03C9  1C03               	skipc
   640     03CA  2BCC               	goto	u261
   641     03CB  2BCD               	goto	u260
   642     03CC                     u261:
   643     03CC  2BC1               	goto	l824
   644     03CD                     u260:
   645     03CD                     l830:
   646                           
   647                           ;main.c: 245:                     for(uint8_t x = 0; x < 20; x++) {
   648     03CD  01B1               	clrf	main@x_222
   649     03CE                     l836:
   650                           
   651                           ;main.c: 248:                         bitbang_pwm_cycle(30 + (x*2));
   652     03CE  0831               	movf	main@x_222,w
   653     03CF  00A7               	movwf	??_main
   654     03D0  0727               	addwf	??_main,w
   655     03D1  3E1E               	addlw	30
   656     03D2  2325               	fcall	_bitbang_pwm_cycle
   657     03D3                     l838:
   658                           
   659                           ;main.c: 249:                     }
   660     03D3  3001               	movlw	1
   661     03D4  1283               	bcf	3,5	;RP0=0, select bank0
   662     03D5  07B1               	addwf	main@x_222,f
   663     03D6                     l840:
   664     03D6  3014               	movlw	20
   665     03D7  0231               	subwf	main@x_222,w
   666     03D8  1C03               	skipc
   667     03D9  2BDB               	goto	u271
   668     03DA  2BDC               	goto	u270
   669     03DB                     u271:
   670     03DB  2BCE               	goto	l836
   671     03DC                     u270:
   672     03DC                     l842:
   673                           
   674                           ;main.c: 250:                 }
   675     03DC  3001               	movlw	1
   676     03DD  07AB               	addwf	main@y,f
   677     03DE  1803               	skipnc
   678     03DF  0AAC               	incf	main@y+1,f
   679     03E0  3000               	movlw	0
   680     03E1  07AC               	addwf	main@y+1,f
   681     03E2                     l844:
   682     03E2  082C               	movf	main@y+1,w
   683     03E3  3A80               	xorlw	128
   684     03E4  00DF               	movwf	btemp+1
   685     03E5  3080               	movlw	128
   686     03E6  025F               	subwf	btemp+1,w
   687     03E7  1D03               	skipz
   688     03E8  2BEB               	goto	u285
   689     03E9  3002               	movlw	2
   690     03EA  022B               	subwf	main@y,w
   691     03EB                     u285:
   692     03EB  1C03               	skipc
   693     03EC  2BEE               	goto	u281
   694     03ED  2BEF               	goto	u280
   695     03EE                     u281:
   696     03EE  2BBF               	goto	l818
   697     03EF                     u280:
   698     03EF                     l846:
   699                           
   700                           ;main.c: 252:                 muting_counter = 300;
   701     03EF  302C               	movlw	44
   702     03F0  1283               	bcf	3,5	;RP0=0, select bank0
   703     03F1  00A9               	movwf	main@muting_counter
   704     03F2  3001               	movlw	1
   705     03F3  00AA               	movwf	main@muting_counter+1
   706                           
   707                           ;main.c: 253:             } else {
   708     03F4  2B6C               	goto	l778
   709     03F5                     l848:
   710                           
   711                           ;main.c: 254:                 muting_counter--;
   712     03F5  30FF               	movlw	255
   713     03F6  07A9               	addwf	main@muting_counter,f
   714     03F7  1803               	skipnc
   715     03F8  0AAA               	incf	main@muting_counter+1,f
   716     03F9  30FF               	movlw	255
   717     03FA  07AA               	addwf	main@muting_counter+1,f
   718     03FB  2B6C               	goto	l778
   719     03FC  2800               	ljmp	start
   720     03FD                     __end_of_main:
   721                           
   722                           	psect	text1
   723     0325                     __ptext1:	
   724 ;; *************** function _bitbang_pwm_cycle *****************
   725 ;; Defined at:
   726 ;;		line 109 in file "main.c"
   727 ;; Parameters:    Size  Location     Type
   728 ;;  bri             1    wreg     unsigned char 
   729 ;; Auto vars:     Size  Location     Type
   730 ;;  bri             1    2[BANK0 ] unsigned char 
   731 ;;  on              2    5[BANK0 ] short 
   732 ;;  period          2    3[BANK0 ] short 
   733 ;; Return value:  Size  Location     Type
   734 ;;                  1    wreg      void 
   735 ;; Registers used:
   736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
   737 ;; Tracked objects:
   738 ;;		On entry : 0/0
   739 ;;		On exit  : 0/0
   740 ;;		Unchanged: 0/0
   741 ;; Data sizes:     COMMON   BANK0
   742 ;;      Params:         0       0
   743 ;;      Locals:         0       5
   744 ;;      Temps:          0       2
   745 ;;      Totals:         0       7
   746 ;;Total ram usage:        7 bytes
   747 ;; Hardware stack levels used: 2
   748 ;; This function calls:
   749 ;;		Nothing
   750 ;; This function is called by:
   751 ;;		_main
   752 ;; This function uses a non-reentrant model
   753 ;;
   754                           
   755     0325                     _bitbang_pwm_cycle:	
   756                           ;psect for function _bitbang_pwm_cycle
   757                           
   758                           
   759                           ;incstack = 0
   760                           ; Regs used in _bitbang_pwm_cycle: [wreg-fsr0h+status,2+status,0+pclath]
   761                           ;bitbang_pwm_cycle@bri stored from wreg
   762     0325  1283               	bcf	3,5	;RP0=0, select bank0
   763     0326  00A2               	movwf	bitbang_pwm_cycle@bri
   764     0327                     l734:
   765                           
   766                           ;main.c: 109: __attribute__((inline)) void bitbang_pwm_cycle(uint8_t bri);main.c: 110: {
      +                          ;main.c: 111:     int16_t period = 99;
   767     0327  3063               	movlw	99
   768     0328  00A3               	movwf	bitbang_pwm_cycle@period
   769     0329  3000               	movlw	0
   770     032A  00A4               	movwf	bitbang_pwm_cycle@period+1
   771     032B                     l736:
   772                           
   773                           ;main.c: 113:     int16_t on = log_table[bri];
   774     032B  0822               	movf	bitbang_pwm_cycle@bri,w
   775     032C  3E01               	addlw	low ((_log_table-__stringbase)| (0+32768))
   776     032D  0084               	movwf	4
   777     032E  2001               	fcall	stringdir
   778     032F  00A0               	movwf	??_bitbang_pwm_cycle
   779     0330  01A1               	clrf	??_bitbang_pwm_cycle+1
   780     0331  0820               	movf	??_bitbang_pwm_cycle,w
   781     0332  00A5               	movwf	bitbang_pwm_cycle@on
   782     0333  0821               	movf	??_bitbang_pwm_cycle+1,w
   783     0334  00A6               	movwf	bitbang_pwm_cycle@on+1
   784                           
   785                           ;main.c: 114:     while(period) {
   786     0335  2B4B               	goto	l746
   787     0336                     l738:
   788                           
   789                           ;main.c: 115:         if(on) {
   790     0336  0825               	movf	bitbang_pwm_cycle@on,w
   791     0337  0426               	iorwf	bitbang_pwm_cycle@on+1,w
   792     0338  1903               	btfsc	3,2
   793     0339  2B3B               	goto	u151
   794     033A  2B3C               	goto	u150
   795     033B                     u151:
   796     033B  2B44               	goto	l31
   797     033C                     u150:
   798     033C                     l740:
   799                           
   800                           ;main.c: 116:             GPIObits.GPIO0 = 1;
   801     033C  1405               	bsf	5,0	;volatile
   802     033D                     l742:
   803                           
   804                           ;main.c: 117:             on--;
   805     033D  30FF               	movlw	255
   806     033E  07A5               	addwf	bitbang_pwm_cycle@on,f
   807     033F  1803               	skipnc
   808     0340  0AA6               	incf	bitbang_pwm_cycle@on+1,f
   809     0341  30FF               	movlw	255
   810     0342  07A6               	addwf	bitbang_pwm_cycle@on+1,f
   811                           
   812                           ;main.c: 118:         }
   813     0343  2B45               	goto	l744
   814     0344                     l31:	
   815                           ;main.c: 119:         else
   816                           
   817                           
   818                           ;main.c: 120:         {;main.c: 121:             GPIObits.GPIO0 = 0;
   819     0344  1005               	bcf	5,0	;volatile
   820     0345                     l744:
   821                           
   822                           ;main.c: 123:         period--;
   823     0345  30FF               	movlw	255
   824     0346  07A3               	addwf	bitbang_pwm_cycle@period,f
   825     0347  1803               	skipnc
   826     0348  0AA4               	incf	bitbang_pwm_cycle@period+1,f
   827     0349  30FF               	movlw	255
   828     034A  07A4               	addwf	bitbang_pwm_cycle@period+1,f
   829     034B                     l746:
   830                           
   831                           ;main.c: 114:     while(period) {
   832     034B  0823               	movf	bitbang_pwm_cycle@period,w
   833     034C  0424               	iorwf	bitbang_pwm_cycle@period+1,w
   834     034D  1D03               	btfss	3,2
   835     034E  2B50               	goto	u161
   836     034F  2B51               	goto	u160
   837     0350                     u161:
   838     0350  2B36               	goto	l738
   839     0351                     u160:
   840     0351                     l34:
   841     0351  0008               	return
   842     0352                     __end_of_bitbang_pwm_cycle:
   843                           
   844                           	psect	text2
   845     031F                     __ptext2:	
   846 ;; *************** function _Timer0_Init *****************
   847 ;; Defined at:
   848 ;;		line 59 in file "main.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  1    wreg      void 
   855 ;; Registers used:
   856 ;;		status,2
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0
   862 ;;      Params:         0       0
   863 ;;      Locals:         0       0
   864 ;;      Temps:          0       0
   865 ;;      Totals:         0       0
   866 ;;Total ram usage:        0 bytes
   867 ;; Hardware stack levels used: 1
   868 ;; This function calls:
   869 ;;		Nothing
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875     031F                     _Timer0_Init:	
   876                           ;psect for function _Timer0_Init
   877                           
   878     031F                     l726:	
   879                           ;incstack = 0
   880                           ; Regs used in _Timer0_Init: [status,2]
   881                           
   882                           
   883                           ;main.c: 60:     OPTION_REGbits.T0CS = 1;
   884     031F  1683               	bsf	3,5	;RP0=1, select bank1
   885     0320  1681               	bsf	1,5	;volatile
   886                           
   887                           ;main.c: 61:     TRISIO2 = 1;
   888     0321  1505               	bsf	5,2	;volatile
   889     0322                     l728:
   890                           
   891                           ;main.c: 62:     TMR0 = 0;
   892     0322  1283               	bcf	3,5	;RP0=0, select bank0
   893     0323  0181               	clrf	1	;volatile
   894     0324                     l21:
   895     0324  0008               	return
   896     0325                     __end_of_Timer0_Init:
   897                           
   898                           	psect	text3
   899     031C                     __ptext3:	
   900 ;; *************** function _Read_Timer0 *****************
   901 ;; Defined at:
   902 ;;		line 66 in file "main.c"
   903 ;; Parameters:    Size  Location     Type
   904 ;;		None
   905 ;; Auto vars:     Size  Location     Type
   906 ;;		None
   907 ;; Return value:  Size  Location     Type
   908 ;;                  1    wreg      unsigned char 
   909 ;; Registers used:
   910 ;;		wreg
   911 ;; Tracked objects:
   912 ;;		On entry : 0/0
   913 ;;		On exit  : 0/0
   914 ;;		Unchanged: 0/0
   915 ;; Data sizes:     COMMON   BANK0
   916 ;;      Params:         0       0
   917 ;;      Locals:         0       0
   918 ;;      Temps:          0       0
   919 ;;      Totals:         0       0
   920 ;;Total ram usage:        0 bytes
   921 ;; Hardware stack levels used: 1
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929     031C                     _Read_Timer0:	
   930                           ;psect for function _Read_Timer0
   931                           
   932     031C                     l730:	
   933                           ;incstack = 0
   934                           ; Regs used in _Read_Timer0: [wreg]
   935                           
   936                           
   937                           ;main.c: 67:     return TMR0;
   938     031C  1283               	bcf	3,5	;RP0=0, select bank0
   939     031D  0801               	movf	1,w	;volatile
   940     031E                     l24:
   941     031E  0008               	return
   942     031F                     __end_of_Read_Timer0:
   943     0000                     ___latbits      equ	0
   944     005E                     btemp           set	94	;btemp
   945     005E                     wtemp0          set	94
   946                           
   947                           	psect	config
   948                           
   949                           ;Config register CONFIG @ 0x2007
   950                           ;	Oscillator Selection bits
   951                           ;	FOSC = INTRCIO, INTOSC oscillator: I/O function on GP4/OSC2/CLKOUT pin, I/O function o
      +                          n GP5/OSC1/CLKIN
   952                           ;	Watchdog Timer Enable bit
   953                           ;	WDTE = OFF, WDT disabled
   954                           ;	Power-Up Timer Enable bit
   955                           ;	PWRTE = OFF, PWRT disabled
   956                           ;	GP3/MCLR pin function select
   957                           ;	MCLRE = OFF, GP3/MCLR pin function is digital I/O, MCLR internally tied to VDD
   958                           ;	Brown-out Detect Enable bit
   959                           ;	BOREN = OFF, BOD disabled
   960                           ;	Code Protection bit
   961                           ;	CP = OFF, Program Memory code protection is disabled
   962                           ;	Data Code Protection bit
   963                           ;	CPD = OFF, Data memory code protection is disabled
   964     2007                     	org	8199
   965     2007  3194               	dw	12692

Data Sizes:
    Strings     0
    Constant    100
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62     20      20

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_bitbang_pwm_cycle

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                15    15      0     585
                                              7 BANK0     13    13      0
                        _Read_Timer0
                        _Timer0_Init
                  _bitbang_pwm_cycle
 ---------------------------------------------------------------------------------
 (2) _bitbang_pwm_cycle                                    7     7      0      77
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) _Timer0_Init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_Timer0                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_Timer0
   _Timer0_Init
   _bitbang_pwm_cycle

Address spaces:
Name               Size   Autos  Total    Usage
BITCOMMON            0      0       0      0.0%
BITBANK0            62      0       0      0.0%
COMMON               0      0       0      0.0%
BANK0               62     20      20     32.3%
STACK                0      0       0      0.0%
DATA                 0      0      20      0.0%


Microchip Technology PIC Macro Assembler V3.00 build 20241204225717 
Symbol Table                                                                                   Sun Mar  2 16:06:46 2025

                        pc 0002                         l21 0324                         l31 0344  
                       l24 031E                         l41 0397                         l34 0351  
                       fsr 0004                        l800 03A3                        l730 031C  
                      l810 03B7                        l802 03A9                        l740 033C  
                      l812 03BD                        l804 03AA                        l726 031F  
                      l742 033D                        l734 0327                        l830 03CD  
                      l806 03AE                        l750 0352                        l728 0322  
                      l744 0345                        l736 032B                        l840 03D6  
                      l824 03C1                        l808 03B2                        l760 035D  
                      l752 0354                        l738 0336                        l746 034B  
                      l842 03DC                        l826 03C4                        l818 03BF  
                      l770 0364                        l762 035E                        l754 0357  
                      l844 03E2                        l836 03CE                        l828 03C7  
                      l780 036F                        l772 0365                        l764 035F  
                      l756 0358                        l748 0352                        l846 03EF  
                      l838 03D3                        l790 0386                        l782 0375  
                      l774 0366                        l766 0360                        l758 035B  
                      l848 03F5                        l792 038C                        l784 0377  
                      l776 0368                        l768 0362                        l794 038F  
                      l786 037D                        l778 036C                        l796 0395  
                      l788 037F                        l798 039D                        u200 0395  
                      u201 0394                        u210 039D                        u211 039C  
                      u220 03A9                        u221 03A8                        u150 033C  
                      u230 03B2                        u151 033B                        u231 03B1  
                      u160 0351                        u240 03B7                        u161 0350  
                      u241 03B6                        u250 03BD                        u170 0375  
                      u251 03BC                        u171 0374                        u260 03CD  
                      u180 0386                        u261 03CC                        u181 0385  
                      u270 03DC                        u190 038C                        u271 03DB  
                      u191 038B                        u280 03EF                        u281 03EE  
                      u285 03EB                        fsr0 0004                       _TMR0 0001  
                     _main 0352                       btemp 005E                       start 0000  
            ??_Read_Timer0 0000                      ?_main 0020                      _CMCON 0019  
                    _VRCON 0099                      main@x 0030                      main@y 002B  
                    pclath 000A                      status 0003                      wtemp0 005E  
          __initialization 03FD               __end_of_main 03FD                     ??_main 0027  
      __end_of_Read_Timer0 031F        bitbang_pwm_cycle@on 0025              ??_Timer0_Init 0000  
            main@timer_val 002D    __end_of__initialization 03FD             __pcstackCOMMON 0000  
      __end_of_Timer0_Init 0325                _Read_Timer0 031C             _OPTION_REGbits 0081  
               __pmaintext 0352       bitbang_pwm_cycle@bri 0022          _bitbang_pwm_cycle 0325  
       ?_bitbang_pwm_cycle 0020         main@muting_counter 0029                    _TRISIO2 042A  
               __stringtab 0001        ??_bitbang_pwm_cycle 0020                _Timer0_Init 031F  
       main@led_brightness 0033                  _ANSELbits 009F                    __ptext1 0325  
                  __ptext2 031F                    __ptext3 031C  __end_of_bitbang_pwm_cycle 0352  
        __end_of_log_table 006B       end_of_initialization 03FD               ?_Read_Timer0 0020  
      start_initialization 03FD                  ___latbits 0000              __pcstackBANK0 0020  
             ?_Timer0_Init 0020                  __pstrings 0001                  _log_table 0007  
                 _GPIObits 0005                 _ADCON0bits 001F                __stringbase 0006  
                main@x_222 0031    bitbang_pwm_cycle@period 0023         __end_of__stringtab 0007  
     main@ac_sense_timeout 002E         main@set_brightness 0032                  stringcode 0001  
                 stringdir 0001                   stringtab 0001         main@last_timer_val 0028  
               _TRISIObits 0085  
